generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  boards    Board[]
  comments  Comment[]
}

model Board {
  id          Int      @id @default(autoincrement())
  userId      Int?
  createdAt   DateTime @default(now())
  description String?
  name        String?
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  columns     Column[]
  colPos      Int[]
}

model Column {
  id          Int      @id @default(autoincrement())
  boardId     Int?
  createdAt   DateTime @default(now())
  description String?
  title       String?
  updatedAt   DateTime @updatedAt
  index       Int?
  board       Board?   @relation(fields: [boardId], references: [id])
  tasks       Task[]
  taskPos     Int[]
}

model Task {
  id          Int       @id @default(autoincrement())
  columnId    Int?
  createdAt   DateTime  @default(now())
  description String?
  name        String?
  color       String?
  startDate   DateTime?
  endDate     DateTime?
  updatedAt   DateTime  @updatedAt
  column      Column?   @relation(fields: [columnId], references: [id])
  comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String?
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  taskId    Int?
  task      Task?    @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
